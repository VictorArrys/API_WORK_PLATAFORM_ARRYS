@startuml GeneracionDeReportesEstadisticos

box Cliente
    actor Administrador as a
    participant ReportesEstadisticos as b <<GUI>> 
    participant ReportesEstadisticosController as c <<Controller>>
    participant EstadisticasDAO as d <<DAO>>
end box

box Servidor
    participant ElCamelloAPI as e <<API>>
    participant Estadisticas as f <<Componente>>
    participant EstadisticasDAO as g <<DAO>>
    database elCamelloDB as db
end box

a -> b : cargarEstadisticas()
activate a
activate b

b -> c : cargarTablas()
activate c

c -> d : GetEstadisticasPlataforma(\ntoken: string): Administrador
activate d

note right of d  
**headers**
x-access-token: string
end note

d -> e : **GET** /estadisticas/estadisticasUsoPlataforma
activate e

e -> f : estadisticaUsoPlataforma(callback): Administrador
activate f

f -> g : estadisticaUsoPlataforma(callback): Administrador
activate g

g -> db : SELECT * FROM deser_el_camello.estadisticas_uso_plataforma
activate db

note right of db  
**payload**
[
    {
        fecha: string,
        mes: string,
        ofertas_publicadas: int,
        categoria: string
    }
    ...
    ...
    ...
]
end note

db -->> g : response

alt Estadisticas uso plataforma consultadas
    g ->> f : callback(200, response)
    
    f ->> e : callback(200, response)

    e -->> d: **OK** 200
    d -->> c: UsoPlataforma[] :response

     c ->> c: cargarEstadisticasPlataforma()
    
else Error interno
    g ->> f : callback(500, mensaje)

    f ->> e : callback(500, mensaje)

    e -->> d: **INTERNAL ERROR** 500

    d -->> c: null

    c ->> c: mostrarMensaje\nErrorInternoServidor()
else Peticion incorrecta
    g ->> f : callback(404, mensaje)
    deactivate g

    f ->> e : callback(404, mensaje)
    deactivate f

    e -->> d: **NOT FOUND** 404
    deactivate e

    d -->> c: null
    deactivate d

    c ->> c: mostrarMensaje\nPeticionNoEncontrada()

end

c -> d : GetEstadisticasDemanda(\ntoken: string): Administrador

note right of d  
**headers**
x-access-token: string
end note

d -> e : **GET** /estadisticas/estadisiticasEmpleos
activate e

e -> f : estadisticaEmpleos(callback): Administrador
activate f

f -> g : estadisticaEmpleos(callback): Administrador
activate g

g -> db : SELECT * FROM deser_el_camello.estadisticas_empleos
activate db

note right of db  
**payload**
[
    {
        fecha: date,
        solicitudes_publicadas: int,
        categoria: string
    }
    ...
    ...
    ...
]
end note

db -->> g : response

alt Estadisticas empleo demanda consultadas
    g ->> f : callback(200, response)
    
    f ->> e : callback(200, response)

    e -->> d: **OK** 200
    d -->> c: EstadisticasEmpleoDemanda[] :response

     c ->> c: cargarMayoresOfertas()
    
else Error interno
    g ->> f : callback(500, mensaje)

    f ->> e : callback(500, mensaje)

    e -->> d: **INTERNAL ERROR** 500

    d -->> c: null

    c ->> c: mostrarMensaje\nErrorInternoServidor()
else Peticion incorrecta
    g ->> f : callback(404, mensaje)
    deactivate g

    f ->> e : callback(404, mensaje)
    deactivate f

    e -->> d: **NOT FOUND** 404
    deactivate e

    d -->> c: null
    deactivate d

    c ->> c: mostrarMensaje\nPeticionNoEncontrada()

end

c -> d : GetValoracionesAspirantes(\ntoken: string): Administrador

note right of d  
**headers**
x-access-token: string
end note

d -> e : **GET** /estadisticas/valoracionesAspirantes
activate e

e -> f : valoracionesAspirante(callback): Administrador
activate f

f -> g : valoracionesAspirante(callback): Administrador
activate g

g -> db : SELECT * FROM deser_el_camello.valoraciones_aspirantes WHERE valoracion_aspirante
activate db

note right of db  
**payload**
[
    {
        aspirante: string,
        id_aspirante: int,
        valoracion_aspirante: int
    }
    ...
    ...
    ...
]
end note

db -->> g : response

alt Valoraciones aspirante consultadas
    g ->> f : callback(200, response)
    
    f ->> e : callback(200, response)

    e -->> d: **OK** 200
    d -->> c: ValoracionAspirante[] :response

     c ->> c: cargarValoracionesAspirantes()
    
else Error interno
    g ->> f : callback(500, mensaje)

    f ->> e : callback(500, mensaje)

    e -->> d: **INTERNAL ERROR** 500

    d -->> c: null

    c ->> c: mostrarMensaje\nErrorInternoServidor()
else Peticion incorrecta
    g ->> f : callback(404, mensaje)
    deactivate g

    f ->> e : callback(404, mensaje)
    deactivate f

    e -->> d: **NOT FOUND** 404
    deactivate e

    d -->> c: null
    deactivate d

    c ->> c: mostrarMensaje\nPeticionNoEncontrada()

end


c -> d : GetValoracionesEmpleadores(\ntoken: string): Administrador

note right of d  
**headers**
x-access-token: string
end note

d -> e : **GET** /estadisticas/valoracionesEmpleadores
activate e

e -> f : valoracionesEmpleador(callback): Administrador
activate f

f -> g : valoracionesEmpleador(callback): Administrador
activate g

g -> db : SELECT * FROM deser_el_camello.valoraciones_empleadores WHERE valoracion_empleador
activate db

note right of db  
**payload**
[
    {
        empleador: string,
        id_empleador: int,
        valoracion_empleador: int
    }
    ...
    ...
    ...
]
end note

db -->> g : response

alt Valoraciones empleador consultadas
    g ->> f : callback(200, response)
    
    f ->> e : callback(200, response)

    e -->> d: **OK** 200
    d -->> c: ValoracionEmpleador[] :response

     c ->> c: cargarValoracionesEmpleadores()
    
else Error interno
    g ->> f : callback(500, mensaje)

    f ->> e : callback(500, mensaje)

    e -->> d: **INTERNAL ERROR** 500

    d -->> c: null

    c ->> c: mostrarMensaje\nErrorInternoServidor()
else Peticion incorrecta
    g ->> f : callback(404, mensaje)
    deactivate g

    f ->> e : callback(404, mensaje)
    deactivate f

    e -->> d: **NOT FOUND** 404
    deactivate e

    d -->> c: null
    deactivate d

    c ->> c: mostrarMensaje\nPeticionNoEncontrada()

end


@enduml
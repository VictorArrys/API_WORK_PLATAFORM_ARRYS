
@startuml RegistrarOfertaEmpleo

box Cliente
    actor Empleador as a
    participant RegistroOfertaEmpleo as b <<GUI>> 
    participant RegistroOfertaEmpleoController as c <<Controller>>
    participant OfertaEmpleoDAO as d <<DAO>>
end box

box Servidor
    participant ElCamelloAPI as e <<API>>
    participant GestionOfertasEmpleo as f <<Componente>>
    participant OfertaEmpleoDAO as g <<DAO>>
    database elCamelloDB as db
end box

a -> b : capturarDatos()
activate a
activate b

b -> c : btnguardarOfertaEmpleo_Click()
activate c

c -> d : PostOfertaEmpleo(\nofertaEmpleoNueva: OfertaEmpleo,\ntoken: string): Empleador
activate d

note right of d  
**headers**
x-access-token: string

end note

note right of d  
**payload**
idCategoriaEmpleo: int
nombre: string
Descripcion: string
Vacantes: int
DiasLaborales: string,
TipoPago: string,
CantidadPago: int,
Direccion: string,
horaInicio: time,
horaFin: time, 
fechaInicio: date, 
fechaFinalizacion: date
idPerfilEmpleador: int

end note

d -> e : **POST** /ofertasEmpleo-E
activate e

e -> f : postOfertaEmpleo(\nidEmpleador: int, \nofertaEmpleoNueva: OfertaEmpleo): Empleador
activate f

f -> g : postOfertaEmpleo(\nidEmpleador: int, \nofertaEmpleoNueva: OfertaEmpleo): Empleador
activate g

g -> db : INSERT INTO oferta_empleo(\nidCategoriaEmpleo, \nnombre, \nDescripcion,\nVacantes,\nDiasLaborales,\nTipoPago,\nCantidadPago,\nDireccion,\nhoraInicio,\nhoraFin, \nfechaInicio, \nfechaFinalizacion)
activate db

note right of db  
**PAYLOAD**
idOfertaEmpleo: int
end note

db -->> g : response
deactivate db

alt OfertaEmpleo registrada
    g ->> f : callback(201, response)
    
    f ->> e : callback(201, response)

    e -->> d: **CREATED** 201
    d -->> c: idOfertaEmpleo :response

    c -> d : PostFotografiasOfertaEmpleo(\nidOfertaEmpleo: OfertaEmpleo,\nfotografias: List<byte[]>): Empleador

    note right of d  
    **payload**
    fotografia: byte[]
    end note

    d -> e : **POST** /ofertasEmpleo-E/:idOfertaEmpleo/fotografia

    e -> f : postFotografiaOfertaEmpleo(\nidOfertaEmpleo: int, \nfotografia: byte[]): Empleador

    f -> g : postFotografiaOfertaEmpleo(\nidOfertaEmpleo: int, \nfotografia: byte[]): Empleador

    g -> db : INSERT INTO fotografia(idOfertaEmpleo, fotografia)

    note right of db  
    **Status Code**
    201
    end note

    db -->> g : response
    deactivate db

    alt Fotografia registrada
        g ->> f : callback(201, response)
        
        f ->> e : callback(201, response)

        e -->> d: **CREATED** 201
        d -->> c: cambios :response

    else Fotografia no registrada
        g ->> f : callback(500, mensaje)
        activate g

        f ->> e : callback(500, mensaje)
        deactivate f

        e -->> d: **INTERNAL ERROR** 500
        deactivate e

        d -->> c: null
        deactivate d

        c ->> c: mostrarMensaje\nRegistrarFotoFallido()
    else Peticion incorrecta
        g ->> f : callback(404, mensaje)
        deactivate g

        f ->> e : callback(404, mensaje)
        deactivate f

        e -->> d: **NOT FOUND** 404
        deactivate e

        d -->> c: null
        deactivate d

        c ->> c: mostrarMensaje\nRegistrarFotoFallido()

    end

    c ->> c: actualizarCambios("Registrar oferta empleo")
    c ->> c: mostrarMensaje\nRegistroExitoso()
else OfertaEmpleo no registrada
    g ->> f : callback(500, mensaje)

    f ->> e : callback(500, mensaje)

    e -->> d: **INTERNAL ERROR** 500

    d -->> c: null

    c ->> c: mostrarMensaje\nRegistrarFallido()
else Peticion incorrecta
    g ->> f : callback(404, mensaje)
    deactivate g

    f ->> e : callback(404, mensaje)
    deactivate f

    e -->> d: **NOT FOUND** 404
    deactivate e

    d -->> c: null
    deactivate d

    c ->> c: mostrarMensaje\nRegistrarFallido()

end


@enduml
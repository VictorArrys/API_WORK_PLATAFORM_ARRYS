@startuml ConsultarSolicitudesDeTrabajo

box Cliente
    actor Empleador as a
    participant SolicitudesEmpleo as b <<GUI>> 
    participant SolicitudesEmpleoController as c <<Controller>>
    participant SolicitudEmpleoDAO as d <<DAO>>
end box

box Servidor
    participant ElCamelloAPI as e <<API>>
    participant GestionSolicitudesEmpleo as f <<Componente>>
    participant SolicitudDAO as g <<DAO>>
    database elCamelloDB as db
end box

a -> b : cargarSolicitudes()
activate a
activate b

b -> c : recuperarSolicitudes()
activate c

c -> d : GetSolicitudesEmpleo(\ntoken: string, \nidOfertaEmpleo: int): Empleador
activate d

note right of d  
**headers**
x-access-token: string
end note

d -> e : **GET** /solicitudesEmpleo
activate e

e -> f : getSolicitudEmpleo(\idOfertaEmpleo: int,callback): Empleador
activate f

f -> g : getSolicitudEmpleo(\idOfertaEmpleo: int,callback): Empleador
activate g

g -> db : SELECT Solicitud WHERE idOfertaEmpleo 
activate db

note right of db  
**payload**
[
    {
        id_solicitud_aspirante: int,
        id_perfil_aspirante_sa: int,
        id_oferta_empleo_sa: int,
        estatus: int,
        fecha_registro: date,
        nombre: string,
        id_perfil_usuario_aspirante: int
    }
    ...
    ...
    ...
]
end note

db -->> g : response

alt Solicitudes consultadas
    g ->> f : callback(200, response)
    
    f ->> e : callback(200, response)

    e -->> d: **OK** 200
    d -->> c: ReporteEmpleo :response

    alt Aceptar solicitud

        a -> b : aceptarEmpleado()

        b -> c : aceptarEmpleado()

        c -> d : PatchAceptarSolicitud(\ntoken: string, \nidSolicitud: int): Empleador

        note right of d  
        **headers**
        x-access-token: string
        end note

        d -> e : **PATCH** /solicitudesEmpleo/:idSolicitudEmpleo/aceptada

        e -> f : patchAceptarSolicitud(\nidSolicitudEmpleo, callback): Empleador

        f -> g : patchAceptarSolicitud(\nidSolicitudEmpleo, callback): Empleador

        g -> db : UPDATE solicitud_aspirante SET estatus = 0 WHERE idReporteEmpleo

        note right of db  
        **Detalles**
        De forma interna se crea:
         -Una contrataci贸n
         -Una conversaci贸n(agregando al empleador) 
        si no existe ya una.
        En dado caso que si existe se agrega:
         -El aspirante a:
            *La contrataci贸n
            *La conversaci贸n.
        No se plasmo debido a la complejidad y cantidad de todas las tareas que se realizan
        end note

        db -->> g : response

        alt Solicitud empleo aprobada

            g ->> f : callback(204)
            
            f ->> e : callback(204)

            e -->> d: **NO CONTENT** 204
            d -->> c: 204 :response
            
        else Error interno
            g ->> f : callback(500, mensaje)

            f ->> e : callback(500, mensaje)

            e -->> d: **INTERNAL ERROR** 500

            d -->> c: null

            c ->> c: mostrarMensaje\nErrorInternoServidor()
        else Peticion incorrecta
            g ->> f : callback(404, mensaje)
            deactivate g

            f ->> e : callback(404, mensaje)
            deactivate f

            e -->> d: **NOT FOUND** 404
            deactivate e

            d -->> c: null
            deactivate d

            c ->> c: mostrarMensaje\nPeticionNoEncontrada()

        end
    else Rechazar solicitud

        a -> b : rechazarEmpleado()

        b -> c : rechazarEmpleado()

        c -> d : PatchRechazarSolicitud(\ntoken: string, \nidReporte: int): Empleador

        note right of d  
        **headers**
        x-access-token: string
        end note

        d -> e : **PATCH** /solicitudesEmpleo/:idSolicitudEmpleo/rechazada

        e -> f : patchRechazarSolicitud(\nidSolicitudEmpleo, callback): Empleador

        f -> g : patchRechazarSolicitud(\nidSolicitudEmpleo, callback): Empleador

        g -> db : UPDATE solicitud_aspirante SET estatus = -1 WHERE idSolicitudEmpleo

        db -->> g : response

        alt Solicitud rechazada
            g ->> f : callback(204)
            
            f ->> e : callback(204)

            e -->> d: **WITHOUT CONTENT** 204
            d -->> c: 204 :response
            
            c ->> c: mostrarMensaje\nSe ha rechazado la solicitud de empleo()
        else Error interno
            g ->> f : callback(500, mensaje)

            f ->> e : callback(500, mensaje)

            e -->> d: **INTERNAL ERROR** 500

            d -->> c: null

            c ->> c: mostrarMensaje\nErrorInternoServidor()
        else Peticion incorrecta
            g ->> f : callback(404, mensaje)
            deactivate g

            f ->> e : callback(404, mensaje)
            deactivate f

            e -->> d: **NOT FOUND** 404
            deactivate e

            d -->> c: null
            deactivate d

            c ->> c: mostrarMensaje\nPeticionNoEncontrada()

        end

    end
    
else Error interno
    g ->> f : callback(500, mensaje)

    f ->> e : callback(500, mensaje)

    e -->> d: **INTERNAL ERROR** 500

    d -->> c: null

    c ->> c: mostrarMensaje\nErrorInternoServidor()
else Peticion incorrecta
    g ->> f : callback(404, mensaje)
    deactivate g

    f ->> e : callback(404, mensaje)
    deactivate f

    e -->> d: **NOT FOUND** 404
    deactivate e

    d -->> c: null
    deactivate d

    c ->> c: mostrarMensaje\nPeticionNoEncontrada()

end

@enduml
